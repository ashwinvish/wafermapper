function stats = tileInfo(tile)
%TILEINFO Outputs or returns statistical information about the tile.

numEdgeFeats = length(vertcat(tile.edgeFeats.points));
numCenterFeats = length(vertcat(tile.centerFeats.points));
numFeaturesTotal = numEdgeFeats + numCenterFeats;

numMatchesXY = size(vertcat(tile.pts{tile.section, :}), 1);
numMatchesTotal = size(vertcat(tile.pts{:}), 1);
numMatchesZ = numMatchesTotal - numMatchesXY;

% Return data structure with the info
if nargout < 1
    fprintf(['Section: %d\n' ...
        'Row: %d\n' ...
        'Column: %d\n' ...
        'File size: %.2f MB\n' ...
        'Dimensions: %d x %d\n' ...
        'Rough alignment: (%d, %d)\n' ...
        'File name: %s\n\n' ...
        'Number of edge features: %d\n' ...
        'Number of center features: %d\n' ...
        'Total features: %d\n\n' ...
        'Number of matches within section (XY): %d\n' ...
        'Number of matches across sections (Z): %d\n' ...
        'Total matches: %d\n\n' ...
        'Transformation matrix:\n' ...
        '[ %.5f %.5f %d\n  %.5f %.5f %d\n  %.5f %.5f %d ]\n'], ...
        tile.section, tile.row, tile.col, tile.filesize, tile.width, tile.height, tile.offsetX, tile.offsetY, tile.filename, ...
        numEdgeFeats, numCenterFeats, numFeaturesTotal, numMatchesXY, numMatchesZ, numMatchesTotal, ...
        tile.T(1, 1), tile.T(1, 2), tile.T(1, 3), tile.T(2, 1), tile.T(2, 2), tile.T(2, 3), tile.T(3, 1), tile.T(3, 2), tile.T(3, 3))
    return
else
    stats.numEdgeFeats = numEdgeFeats;
    stats.numCenterFeats = numCenterFeats;
    stats.numFeaturesTotal = numFeaturesTotal;
    stats.numMatchesXY = numMatchesXY;
    stats.numMatchesTotal = numMatchesTotal;
    stats.numMatchesZ = numMatchesZ;
end

end

